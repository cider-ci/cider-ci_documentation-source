!!!
%html{:lang => "en"}
  %head
    %meta{charset: "utf-8"}
    %meta{content: "IE=edge", "http-equiv" => "X-UA-Compatible"}
    %meta(name="viewport" content="width=device-width, initial-scale=1")
    -# %link{:href => "../../favicon.ico", :rel => "icon"}/
    - if current_page.data.title
      %title #{current_page.data.title} - Cider-Ci Documentation
    - else
      %title Cider-CI Docs
    = stylesheet_link_tag "app"
    = javascript_include_tag "vendor"
    = javascript_include_tag "app"

  %body#the-cider-ci-documentation

    .container

      %nav.navbar.navbar-inverse
        .container-fluid
          / Brand and toggle get grouped for better mobile display
          .navbar-header
            %button.navbar-toggle.collapsed{"aria-expanded" => "false", "data-target" => "#bs-example-navbar-collapse-1", "data-toggle" => "collapse", :type => "button"}
              %span.sr-only Toggle navigation
              %span.icon-bar
              %span.icon-bar
              %span.icon-bar
            = link_to "/index.html", class: "navbar-brand" do
              Cider-CI
              = partial 'semantic_version', locals: { semver: data.target_release }
              Documentation
          %form.navbar-form.navbar-right{:role => "search", :action => "https://www.google.com/search", :method => "get"}
            .form-group
              %input{:name => "as_sitesearch", :type => "hidden", :value => "docs.cider-ci.info"}
              %input.form-control{:name => "as_q", :placeholder => "Search", :type => "text"}
              %button.btn.btn-default{type: 'submit'} Submit


      :ruby
        @current_path_children = []
        @current_node = {}

        def find_sitemap_path(parent_nodes, current_node)
          nodes = parent_nodes + [current_node.select{|k,v| %w(path title).include? k}]
          path_children = nodes.map{|pi| pi['path']}
          current_path_with_root= "/" + current_path
          possible_path_respresentations = [path_children.join('/'), (path_children  + ["index.html"]).join('/')]
          #puts "############# find_sitemap_path #######"
          #puts({parent_nodes: parent_nodes, nodes: nodes, path_children: path_children, current_path_with_root: current_path_with_root, possible_path_respresentations: possible_path_respresentations, current_node: current_node })
          #puts "#######################################\n\n"
          if possible_path_respresentations.include? current_path_with_root
            #puts "FOUND!"
            @nodes = nodes
            @current_node  = current_node
          else
            if current_node['children']
              current_node['children'].map do |node|
                find_sitemap_path(nodes, node)
              end
            end
          end
        end

        find_sitemap_path([], data['site_map'])
        # reduce would be nicer
        @path_prefix = []
        puts nodes: @nodes, current_node: @current_node

      .row
        .col-md-6
          -if @nodes.present?
            %ol.breadcrumb
              - @nodes.each do |node|
                - @path_prefix << node['path']
                - puts @path_prefix
                %li
                  %a{href: (@path_prefix.join('/').presence || '/')}= node['title'] || node['path']
        .col-md-6
          - if @current_node['children']
            %ol.breadcrumb.with-circle-separator
              - @current_node['children'].reject{|i| i['omit_child_link']}.each do |child|
                %li
                  %a{href: (@path_prefix + [child['path']]).join('/')}= child['title'] || child['path']

      = yield

