---
title: Job Specification
---

# The Job Specification
{:.no_toc}

This documentation focuses on the properties by which
Cider-CI composes the _Job Specification_.


#### Table of Contents 
{:.no_toc}
* Will be replaced with the ToC, excluding the "Contents" header
{:toc}


## Main Context {#main-context}

We call the map underneath a `specification` key in a Cider-CI dotfile the _main
context_. 

    # Cider-CI dotfile .cider-ci.yml
    jobs:
      Tests: 
        specification: 
          # this is the main context
          _cider-ci_include: /.cider-ci/tests_context.yml
  {: .language-yaml}


The following code shows a complete main context. 

    # example of a main context 
    name: Tests 
    task_defaults: 
      environment_variables: 
        ONE: 1
    tasks:
      "Assignment of ENV vars through task_defaults": 
        scripts: 
          main:
            body: test 1 == ${ONE}
  {: .language-yaml}

|-----------------+----------+----------------------------------------------------------------------|
| Key             | Required | Value                                                                |
|-----------------+----------+----------------------------------------------------------------------|
| `name`          | yes      | string                                                               |
| `tasks`         | no       | map, see the [Tasks][] section                                       |
| `task_defaults` | no       | map, see the [Task Defaults][] section                               |
| `subcontexts`   | no       | map, see the [Subcontexts][] section of the [Advanced Topics][] page |
|-----------------+----------+----------------------------------------------------------------------|
{: .table .table-striped}

## Tasks 

A map where key is used as the name for the task (unless the task has a key
`name`). Each value, which is itself a map, specifies a _Task_. See the
[Task][] page for the supported properties. 

## Task Defaults 

The values of the key `task_defaults` can be exactly the same of those of
a [task][].  However, non of them are are required.  When a task specification
is constructed the values of `task_defaults` and `task` are merged. See the see
the [Deep-Merge][] section of the [Advanced Topics][] page for details.

  [Advanced Topics]: ../advanced.html
  [Bash Demo Project]: https://github.com/cider-ci/cider-ci_demo-project-bash
  [Deep-Merge]: ../advanced.html#deep-merge
  [Execution properties]: #execution-properties
  [Subcontexts]: #subcontexts
  [Subcontexts]: ../advanced.html#subcontexts
  [Task Defaults]: #task-defaults
  [Task]: ../task.html
  [Tasks]: #tasks
  [submodule example]: https://github.com/cider-ci/cider-ci_demo-project-bash/blob/master/.cider-ci/shared/submodule_context.yml
